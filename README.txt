Installation instructions:
--------------------------
We assume Castalia 3.2 and OMNET++ 4 being correctly installed.
From the home of castalia (CASTALIA_HOME) do the following:

1) Copy CtpTest in CASTALIA_HOME/Simulations
2) Copy ctpTestingApplication CASTALIA_HOME/src/node/application/
3) Copy ctpNoe in CASTALIA_HOME/src/node/communication/routing/
4) Copy cc2420Mac in CASTALIA_HOME/src/node/communication/mac/
5) [optional] Copy statistics in CASTALIA_HOME/src
6) [only with step 5] Replace SensorNetwork.ned in CASTALIA_HOME/src
7) make clean
8) ./makemake
9) make

Run a test:
------------
Go in CASTALIA_HOME/Simulations/CtpTest and run ../../bin/Castalia -c General

See the results:
----------------
From CASTALIA_HOME/Simulations/CtpTest run ../../bin/CastaliaResults -i [outputfile].txt
Statistics at application level -> "My Stats"  
Statistics from ctp: Ctp Data and Ctp Beacons

[optional] Statistics module:
-----------------------------
As recommended by OMNeT++ 4.x user guide, statistics can now be collected via signals (e.g., "emit" call inside modules). The modules that emit signals with useful data are the CtpTestingApplication, the RoutingEngine and the ForwardingEngine.
Those signals are captured by the StatsCollector module which collects them and generates output files at the end of each simulation run. As an example, the file stats-0.txt (0 is the run number) will show the following output:

AppTx: 9600
AppRx: 8118
AppDupRx: 144

Which represents the total number of data packets generated by all the nodes at application level, the total number of data packets received by the sink and the total number of duplicated packets detected by the sink.
If you compute the DDR with these value and compare it with the "My Stats" one of the old Castalia output you will notice that they are the same. 
Have a look to the StatsCollector module (and its corresponding output) to write your own own statistic module. 
